// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROGETTOMATTEO;

namespace PROGETTOMATTEO.Migrations
{
    [DbContext(typeof(DatabaseCxt))]
    [Migration("20220601131540_UniversityDb")]
    partial class UniversityDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PROGETTOMATTEO.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("NAbitanti")
                        .HasColumnType("bigint");

                    b.Property<long>("NPositivi")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("countryId");

                    b.ToTable("_City");
                });

            modelBuilder.Entity("PROGETTOMATTEO.Continent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("NAbitanti")
                        .HasColumnType("bigint");

                    b.Property<long>("NPositivi")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("_Continent");
                });

            modelBuilder.Entity("PROGETTOMATTEO.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContinentId")
                        .HasColumnType("int");

                    b.Property<long>("NAbitanti")
                        .HasColumnType("bigint");

                    b.Property<long>("NPositivi")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ContinentId");

                    b.ToTable("_Country");
                });

            modelBuilder.Entity("PROGETTOMATTEO.City", b =>
                {
                    b.HasOne("PROGETTOMATTEO.Country", "Country")
                        .WithMany("cities")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PROGETTOMATTEO.Country", b =>
                {
                    b.HasOne("PROGETTOMATTEO.Continent", "Continent")
                        .WithMany("countries")
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Continent");
                });

            modelBuilder.Entity("PROGETTOMATTEO.Continent", b =>
                {
                    b.Navigation("countries");
                });

            modelBuilder.Entity("PROGETTOMATTEO.Country", b =>
                {
                    b.Navigation("cities");
                });
#pragma warning restore 612, 618
        }
    }
}
